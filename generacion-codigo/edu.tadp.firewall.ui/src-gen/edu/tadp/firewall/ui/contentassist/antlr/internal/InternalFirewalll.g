/*
* generated by Xtext
*/
grammar InternalFirewalll;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package edu.tadp.firewall.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.tadp.firewall.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import edu.tadp.firewall.services.FirewalllGrammarAccess;

}

@parser::members {
 
 	private FirewalllGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FirewalllGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleFirewall
entryRuleFirewall 
:
{ before(grammarAccess.getFirewallRule()); }
	 ruleFirewall
{ after(grammarAccess.getFirewallRule()); } 
	 EOF 
;

// Rule Firewall
ruleFirewall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFirewallAccess().getReglasAssignment()); }
(rule__Firewall__ReglasAssignment)*
{ after(grammarAccess.getFirewallAccess().getReglasAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReglaEtiquetada
entryRuleReglaEtiquetada 
:
{ before(grammarAccess.getReglaEtiquetadaRule()); }
	 ruleReglaEtiquetada
{ after(grammarAccess.getReglaEtiquetadaRule()); } 
	 EOF 
;

// Rule ReglaEtiquetada
ruleReglaEtiquetada
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReglaEtiquetadaAccess().getGroup()); }
(rule__ReglaEtiquetada__Group__0)
{ after(grammarAccess.getReglaEtiquetadaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegla
entryRuleRegla 
:
{ before(grammarAccess.getReglaRule()); }
	 ruleRegla
{ after(grammarAccess.getReglaRule()); } 
	 EOF 
;

// Rule Regla
ruleRegla
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReglaAccess().getGroup()); }
(rule__Regla__Group__0)
{ after(grammarAccess.getReglaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccion
entryRuleAccion 
:
{ before(grammarAccess.getAccionRule()); }
	 ruleAccion
{ after(grammarAccess.getAccionRule()); } 
	 EOF 
;

// Rule Accion
ruleAccion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccionAccess().getAlternatives()); }
(rule__Accion__Alternatives)
{ after(grammarAccess.getAccionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForwardearAccion
entryRuleForwardearAccion 
:
{ before(grammarAccess.getForwardearAccionRule()); }
	 ruleForwardearAccion
{ after(grammarAccess.getForwardearAccionRule()); } 
	 EOF 
;

// Rule ForwardearAccion
ruleForwardearAccion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForwardearAccionAccess().getGroup()); }
(rule__ForwardearAccion__Group__0)
{ after(grammarAccess.getForwardearAccionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAceptarAccion
entryRuleAceptarAccion 
:
{ before(grammarAccess.getAceptarAccionRule()); }
	 ruleAceptarAccion
{ after(grammarAccess.getAceptarAccionRule()); } 
	 EOF 
;

// Rule AceptarAccion
ruleAceptarAccion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAceptarAccionAccess().getGroup()); }
(rule__AceptarAccion__Group__0)
{ after(grammarAccess.getAceptarAccionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBloquearAccion
entryRuleBloquearAccion 
:
{ before(grammarAccess.getBloquearAccionRule()); }
	 ruleBloquearAccion
{ after(grammarAccess.getBloquearAccionRule()); } 
	 EOF 
;

// Rule BloquearAccion
ruleBloquearAccion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBloquearAccionAccess().getGroup()); }
(rule__BloquearAccion__Group__0)
{ after(grammarAccess.getBloquearAccionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondicion
entryRuleCondicion 
:
{ before(grammarAccess.getCondicionRule()); }
	 ruleCondicion
{ after(grammarAccess.getCondicionRule()); } 
	 EOF 
;

// Rule Condicion
ruleCondicion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCondicionAccess().getAlternatives()); }
(rule__Condicion__Alternatives)
{ after(grammarAccess.getCondicionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondicionPuerto
entryRuleCondicionPuerto 
:
{ before(grammarAccess.getCondicionPuertoRule()); }
	 ruleCondicionPuerto
{ after(grammarAccess.getCondicionPuertoRule()); } 
	 EOF 
;

// Rule CondicionPuerto
ruleCondicionPuerto
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCondicionPuertoAccess().getGroup()); }
(rule__CondicionPuerto__Group__0)
{ after(grammarAccess.getCondicionPuertoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondicionIP
entryRuleCondicionIP 
:
{ before(grammarAccess.getCondicionIPRule()); }
	 ruleCondicionIP
{ after(grammarAccess.getCondicionIPRule()); } 
	 EOF 
;

// Rule CondicionIP
ruleCondicionIP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCondicionIPAccess().getGroup()); }
(rule__CondicionIP__Group__0)
{ after(grammarAccess.getCondicionIPAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIP
entryRuleIP 
:
{ before(grammarAccess.getIPRule()); }
	 ruleIP
{ after(grammarAccess.getIPRule()); } 
	 EOF 
;

// Rule IP
ruleIP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIPAccess().getGroup()); }
(rule__IP__Group__0)
{ after(grammarAccess.getIPAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Accion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccionAccess().getAceptarAccionParserRuleCall_0()); }
	ruleAceptarAccion
{ after(grammarAccess.getAccionAccess().getAceptarAccionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAccionAccess().getBloquearAccionParserRuleCall_1()); }
	ruleBloquearAccion
{ after(grammarAccess.getAccionAccess().getBloquearAccionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAccionAccess().getForwardearAccionParserRuleCall_2()); }
	ruleForwardearAccion
{ after(grammarAccess.getAccionAccess().getForwardearAccionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condicion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondicionAccess().getCondicionPuertoParserRuleCall_0()); }
	ruleCondicionPuerto
{ after(grammarAccess.getCondicionAccess().getCondicionPuertoParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCondicionAccess().getCondicionIPParserRuleCall_1()); }
	ruleCondicionIP
{ after(grammarAccess.getCondicionAccess().getCondicionIPParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ReglaEtiquetada__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReglaEtiquetada__Group__0__Impl
	rule__ReglaEtiquetada__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReglaEtiquetada__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaEtiquetadaAccess().getGroup_0()); }
(rule__ReglaEtiquetada__Group_0__0)?
{ after(grammarAccess.getReglaEtiquetadaAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReglaEtiquetada__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReglaEtiquetada__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReglaEtiquetada__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaEtiquetadaAccess().getReglaAssignment_1()); }
(rule__ReglaEtiquetada__ReglaAssignment_1)
{ after(grammarAccess.getReglaEtiquetadaAccess().getReglaAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReglaEtiquetada__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReglaEtiquetada__Group_0__0__Impl
	rule__ReglaEtiquetada__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReglaEtiquetada__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaEtiquetadaAccess().getLanAssignment_0_0()); }
(rule__ReglaEtiquetada__LanAssignment_0_0)
{ after(grammarAccess.getReglaEtiquetadaAccess().getLanAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReglaEtiquetada__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReglaEtiquetada__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReglaEtiquetada__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaEtiquetadaAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getReglaEtiquetadaAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Regla__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Regla__Group__0__Impl
	rule__Regla__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Regla__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaAccess().getSiKeyword_0()); }

	'Si ' 

{ after(grammarAccess.getReglaAccess().getSiKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Regla__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Regla__Group__1__Impl
	rule__Regla__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Regla__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaAccess().getCondicionAssignment_1()); }
(rule__Regla__CondicionAssignment_1)
{ after(grammarAccess.getReglaAccess().getCondicionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Regla__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Regla__Group__2__Impl
	rule__Regla__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Regla__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaAccess().getHayQueKeyword_2()); }

	' hay que ' 

{ after(grammarAccess.getReglaAccess().getHayQueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Regla__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Regla__Group__3__Impl
	rule__Regla__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Regla__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaAccess().getAccionAssignment_3()); }
(rule__Regla__AccionAssignment_3)
{ after(grammarAccess.getReglaAccess().getAccionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Regla__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Regla__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Regla__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaAccess().getExclamationMarkKeyword_4()); }

	'!' 

{ after(grammarAccess.getReglaAccess().getExclamationMarkKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ForwardearAccion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardearAccion__Group__0__Impl
	rule__ForwardearAccion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardearAccion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardearAccionAccess().getForwardearAccionAction_0()); }
(

)
{ after(grammarAccess.getForwardearAccionAccess().getForwardearAccionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForwardearAccion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardearAccion__Group__1__Impl
	rule__ForwardearAccion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardearAccion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardearAccionAccess().getForwardearAKeyword_1()); }

	'forwardear a ' 

{ after(grammarAccess.getForwardearAccionAccess().getForwardearAKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForwardearAccion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardearAccion__Group__2__Impl
	rule__ForwardearAccion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardearAccion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardearAccionAccess().getIpAssignment_2()); }
(rule__ForwardearAccion__IpAssignment_2)
{ after(grammarAccess.getForwardearAccionAccess().getIpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForwardearAccion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardearAccion__Group__3__Impl
	rule__ForwardearAccion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardearAccion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardearAccionAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getForwardearAccionAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForwardearAccion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardearAccion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardearAccion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardearAccionAccess().getPuertoAssignment_4()); }
(rule__ForwardearAccion__PuertoAssignment_4)
{ after(grammarAccess.getForwardearAccionAccess().getPuertoAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AceptarAccion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AceptarAccion__Group__0__Impl
	rule__AceptarAccion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AceptarAccion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAceptarAccionAccess().getAceptarAccionAction_0()); }
(

)
{ after(grammarAccess.getAceptarAccionAccess().getAceptarAccionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AceptarAccion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AceptarAccion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AceptarAccion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAceptarAccionAccess().getAceptarKeyword_1()); }

	'aceptar' 

{ after(grammarAccess.getAceptarAccionAccess().getAceptarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BloquearAccion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BloquearAccion__Group__0__Impl
	rule__BloquearAccion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BloquearAccion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBloquearAccionAccess().getBloquearAccionAction_0()); }
(

)
{ after(grammarAccess.getBloquearAccionAccess().getBloquearAccionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BloquearAccion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BloquearAccion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BloquearAccion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBloquearAccionAccess().getBloquearKeyword_1()); }

	'bloquear' 

{ after(grammarAccess.getBloquearAccionAccess().getBloquearKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CondicionPuerto__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondicionPuerto__Group__0__Impl
	rule__CondicionPuerto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionPuerto__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondicionPuertoAccess().getElPuertoEsKeyword_0()); }

	'el puerto es' 

{ after(grammarAccess.getCondicionPuertoAccess().getElPuertoEsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CondicionPuerto__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondicionPuerto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionPuerto__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondicionPuertoAccess().getPuertoAssignment_1()); }
(rule__CondicionPuerto__PuertoAssignment_1)
{ after(grammarAccess.getCondicionPuertoAccess().getPuertoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CondicionIP__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondicionIP__Group__0__Impl
	rule__CondicionIP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionIP__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondicionIPAccess().getLaIpEsKeyword_0()); }

	'la ip es' 

{ after(grammarAccess.getCondicionIPAccess().getLaIpEsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CondicionIP__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondicionIP__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionIP__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondicionIPAccess().getIpAssignment_1()); }
(rule__CondicionIP__IpAssignment_1)
{ after(grammarAccess.getCondicionIPAccess().getIpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IP__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IP__Group__0__Impl
	rule__IP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getPrimeroAssignment_0()); }
(rule__IP__PrimeroAssignment_0)
{ after(grammarAccess.getIPAccess().getPrimeroAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IP__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IP__Group__1__Impl
	rule__IP__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getIPAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IP__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IP__Group__2__Impl
	rule__IP__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getSegundoAssignment_2()); }
(rule__IP__SegundoAssignment_2)
{ after(grammarAccess.getIPAccess().getSegundoAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IP__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IP__Group__3__Impl
	rule__IP__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getIPAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IP__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IP__Group__4__Impl
	rule__IP__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getTerceroAssignment_4()); }
(rule__IP__TerceroAssignment_4)
{ after(grammarAccess.getIPAccess().getTerceroAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IP__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IP__Group__5__Impl
	rule__IP__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getFullStopKeyword_5()); }

	'.' 

{ after(grammarAccess.getIPAccess().getFullStopKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IP__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IP__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getCuartoAssignment_6()); }
(rule__IP__CuartoAssignment_6)
{ after(grammarAccess.getIPAccess().getCuartoAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__Firewall__ReglasAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFirewallAccess().getReglasReglaEtiquetadaParserRuleCall_0()); }
	ruleReglaEtiquetada{ after(grammarAccess.getFirewallAccess().getReglasReglaEtiquetadaParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReglaEtiquetada__LanAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaEtiquetadaAccess().getLanIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getReglaEtiquetadaAccess().getLanIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReglaEtiquetada__ReglaAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaEtiquetadaAccess().getReglaReglaParserRuleCall_1_0()); }
	ruleRegla{ after(grammarAccess.getReglaEtiquetadaAccess().getReglaReglaParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Regla__CondicionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaAccess().getCondicionCondicionParserRuleCall_1_0()); }
	ruleCondicion{ after(grammarAccess.getReglaAccess().getCondicionCondicionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Regla__AccionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReglaAccess().getAccionAccionParserRuleCall_3_0()); }
	ruleAccion{ after(grammarAccess.getReglaAccess().getAccionAccionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardearAccion__IpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardearAccionAccess().getIpIPParserRuleCall_2_0()); }
	ruleIP{ after(grammarAccess.getForwardearAccionAccess().getIpIPParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardearAccion__PuertoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardearAccionAccess().getPuertoINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getForwardearAccionAccess().getPuertoINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionPuerto__PuertoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondicionPuertoAccess().getPuertoINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getCondicionPuertoAccess().getPuertoINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CondicionIP__IpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondicionIPAccess().getIpIPParserRuleCall_1_0()); }
	ruleIP{ after(grammarAccess.getCondicionIPAccess().getIpIPParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IP__PrimeroAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getPrimeroINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getIPAccess().getPrimeroINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IP__SegundoAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getSegundoINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getIPAccess().getSegundoINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IP__TerceroAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getTerceroINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getIPAccess().getTerceroINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IP__CuartoAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIPAccess().getCuartoINTTerminalRuleCall_6_0()); }
	RULE_INT{ after(grammarAccess.getIPAccess().getCuartoINTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


