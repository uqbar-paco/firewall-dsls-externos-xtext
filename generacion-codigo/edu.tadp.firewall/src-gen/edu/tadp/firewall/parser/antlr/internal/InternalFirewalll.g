/*
* generated by Xtext
*/
grammar InternalFirewalll;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package edu.tadp.firewall.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.tadp.firewall.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.tadp.firewall.services.FirewalllGrammarAccess;

}

@parser::members {

 	private FirewalllGrammarAccess grammarAccess;
 	
    public InternalFirewalllParser(TokenStream input, FirewalllGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Firewall";	
   	}
   	
   	@Override
   	protected FirewalllGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleFirewall
entryRuleFirewall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFirewallRule()); }
	 iv_ruleFirewall=ruleFirewall 
	 { $current=$iv_ruleFirewall.current; } 
	 EOF 
;

// Rule Firewall
ruleFirewall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFirewallAccess().getReglasReglaEtiquetadaParserRuleCall_0()); 
	    }
		lv_reglas_0_0=ruleReglaEtiquetada		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFirewallRule());
	        }
       		add(
       			$current, 
       			"reglas",
        		lv_reglas_0_0, 
        		"ReglaEtiquetada");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleReglaEtiquetada
entryRuleReglaEtiquetada returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReglaEtiquetadaRule()); }
	 iv_ruleReglaEtiquetada=ruleReglaEtiquetada 
	 { $current=$iv_ruleReglaEtiquetada.current; } 
	 EOF 
;

// Rule ReglaEtiquetada
ruleReglaEtiquetada returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_lan_0_0=RULE_ID
		{
			newLeafNode(lv_lan_0_0, grammarAccess.getReglaEtiquetadaAccess().getLanIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReglaEtiquetadaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lan",
        		lv_lan_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReglaEtiquetadaAccess().getColonKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getReglaEtiquetadaAccess().getReglaReglaParserRuleCall_1_0()); 
	    }
		lv_regla_2_0=ruleRegla		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReglaEtiquetadaRule());
	        }
       		set(
       			$current, 
       			"regla",
        		lv_regla_2_0, 
        		"Regla");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRegla
entryRuleRegla returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReglaRule()); }
	 iv_ruleRegla=ruleRegla 
	 { $current=$iv_ruleRegla.current; } 
	 EOF 
;

// Rule Regla
ruleRegla returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Si ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReglaAccess().getSiKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReglaAccess().getCondicionCondicionParserRuleCall_1_0()); 
	    }
		lv_condicion_1_0=ruleCondicion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReglaRule());
	        }
       		set(
       			$current, 
       			"condicion",
        		lv_condicion_1_0, 
        		"Condicion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=' hay que ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReglaAccess().getHayQueKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReglaAccess().getAccionAccionParserRuleCall_3_0()); 
	    }
		lv_accion_3_0=ruleAccion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReglaRule());
	        }
       		set(
       			$current, 
       			"accion",
        		lv_accion_3_0, 
        		"Accion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='!' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getReglaAccess().getExclamationMarkKeyword_4());
    }
)
;





// Entry rule entryRuleAccion
entryRuleAccion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccionRule()); }
	 iv_ruleAccion=ruleAccion 
	 { $current=$iv_ruleAccion.current; } 
	 EOF 
;

// Rule Accion
ruleAccion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAccionAccess().getAceptarAccionParserRuleCall_0()); 
    }
    this_AceptarAccion_0=ruleAceptarAccion
    { 
        $current = $this_AceptarAccion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAccionAccess().getBloquearAccionParserRuleCall_1()); 
    }
    this_BloquearAccion_1=ruleBloquearAccion
    { 
        $current = $this_BloquearAccion_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAccionAccess().getForwardearAccionParserRuleCall_2()); 
    }
    this_ForwardearAccion_2=ruleForwardearAccion
    { 
        $current = $this_ForwardearAccion_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleForwardearAccion
entryRuleForwardearAccion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForwardearAccionRule()); }
	 iv_ruleForwardearAccion=ruleForwardearAccion 
	 { $current=$iv_ruleForwardearAccion.current; } 
	 EOF 
;

// Rule ForwardearAccion
ruleForwardearAccion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getForwardearAccionAccess().getForwardearAccionAction_0(),
            $current);
    }
)	otherlv_1='forwardear a ' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForwardearAccionAccess().getForwardearAKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForwardearAccionAccess().getIpIPParserRuleCall_2_0()); 
	    }
		lv_ip_2_0=ruleIP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForwardearAccionRule());
	        }
       		set(
       			$current, 
       			"ip",
        		lv_ip_2_0, 
        		"IP");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getForwardearAccionAccess().getColonKeyword_3());
    }
(
(
		lv_puerto_4_0=RULE_INT
		{
			newLeafNode(lv_puerto_4_0, grammarAccess.getForwardearAccionAccess().getPuertoINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForwardearAccionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"puerto",
        		lv_puerto_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleAceptarAccion
entryRuleAceptarAccion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAceptarAccionRule()); }
	 iv_ruleAceptarAccion=ruleAceptarAccion 
	 { $current=$iv_ruleAceptarAccion.current; } 
	 EOF 
;

// Rule AceptarAccion
ruleAceptarAccion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAceptarAccionAccess().getAceptarAccionAction_0(),
            $current);
    }
)	otherlv_1='aceptar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAceptarAccionAccess().getAceptarKeyword_1());
    }
)
;





// Entry rule entryRuleBloquearAccion
entryRuleBloquearAccion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBloquearAccionRule()); }
	 iv_ruleBloquearAccion=ruleBloquearAccion 
	 { $current=$iv_ruleBloquearAccion.current; } 
	 EOF 
;

// Rule BloquearAccion
ruleBloquearAccion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBloquearAccionAccess().getBloquearAccionAction_0(),
            $current);
    }
)	otherlv_1='bloquear' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBloquearAccionAccess().getBloquearKeyword_1());
    }
)
;





// Entry rule entryRuleCondicion
entryRuleCondicion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCondicionRule()); }
	 iv_ruleCondicion=ruleCondicion 
	 { $current=$iv_ruleCondicion.current; } 
	 EOF 
;

// Rule Condicion
ruleCondicion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCondicionAccess().getCondicionPuertoParserRuleCall_0()); 
    }
    this_CondicionPuerto_0=ruleCondicionPuerto
    { 
        $current = $this_CondicionPuerto_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCondicionAccess().getCondicionIPParserRuleCall_1()); 
    }
    this_CondicionIP_1=ruleCondicionIP
    { 
        $current = $this_CondicionIP_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCondicionPuerto
entryRuleCondicionPuerto returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCondicionPuertoRule()); }
	 iv_ruleCondicionPuerto=ruleCondicionPuerto 
	 { $current=$iv_ruleCondicionPuerto.current; } 
	 EOF 
;

// Rule CondicionPuerto
ruleCondicionPuerto returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='el puerto es' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCondicionPuertoAccess().getElPuertoEsKeyword_0());
    }
(
(
		lv_puerto_1_0=RULE_INT
		{
			newLeafNode(lv_puerto_1_0, grammarAccess.getCondicionPuertoAccess().getPuertoINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCondicionPuertoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"puerto",
        		lv_puerto_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleCondicionIP
entryRuleCondicionIP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCondicionIPRule()); }
	 iv_ruleCondicionIP=ruleCondicionIP 
	 { $current=$iv_ruleCondicionIP.current; } 
	 EOF 
;

// Rule CondicionIP
ruleCondicionIP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='la ip es' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCondicionIPAccess().getLaIpEsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondicionIPAccess().getIpIPParserRuleCall_1_0()); 
	    }
		lv_ip_1_0=ruleIP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondicionIPRule());
	        }
       		set(
       			$current, 
       			"ip",
        		lv_ip_1_0, 
        		"IP");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIP
entryRuleIP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIPRule()); }
	 iv_ruleIP=ruleIP 
	 { $current=$iv_ruleIP.current; } 
	 EOF 
;

// Rule IP
ruleIP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_primero_0_0=RULE_INT
		{
			newLeafNode(lv_primero_0_0, grammarAccess.getIPAccess().getPrimeroINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"primero",
        		lv_primero_0_0, 
        		"INT");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIPAccess().getFullStopKeyword_1());
    }
(
(
		lv_segundo_2_0=RULE_INT
		{
			newLeafNode(lv_segundo_2_0, grammarAccess.getIPAccess().getSegundoINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"segundo",
        		lv_segundo_2_0, 
        		"INT");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIPAccess().getFullStopKeyword_3());
    }
(
(
		lv_tercero_4_0=RULE_INT
		{
			newLeafNode(lv_tercero_4_0, grammarAccess.getIPAccess().getTerceroINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tercero",
        		lv_tercero_4_0, 
        		"INT");
	    }

)
)	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIPAccess().getFullStopKeyword_5());
    }
(
(
		lv_cuarto_6_0=RULE_INT
		{
			newLeafNode(lv_cuarto_6_0, grammarAccess.getIPAccess().getCuartoINTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cuarto",
        		lv_cuarto_6_0, 
        		"INT");
	    }

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


